{"version":3,"sources":["hooks/useAsync.js","services/ProductServices.js","components/common/PageTitle.js","pages/EditProfile.js","components/form/Error.js","components/form/LabelArea.js","services/SettingServices.js","components/form/InputArea.js","services/AdminServices.js","components/image-uploader/ItemTypes.js","components/image-uploader/Card.js","components/image-uploader/Container.js","components/image-uploader/Uploader.js","components/form/SelectRole.js","hooks/useStaffSubmit.js","services/httpService.js"],"names":["useAsync","asyncFunction","data","setData","useState","error","setError","loading","setLoading","isUpdate","setIsUpdate","currentPage","category","searchText","invoice","status","zone","time","sortedField","source","limitData","startDate","endDate","useContext","SidebarContext","useEffect","unmounted","axios","CancelToken","res","cancelToken","token","err","message","isCancel","cancel","ProductServices","getAllProducts","async","quantity","page","limit","title","price","_ref","obj","sort","created_at","body","Object","keys","length","console","log","requests","post","getProductById","get","id","addProduct","addAllProducts","updateProduct","updateManyProducts","patch","updateStatus","put","deleteProduct","delete","deleteManyProducts","PageTitle","description","_jsxs","Helmet","children","_jsx","name","content","EditProfile","t","useTranslation","state","adminInfo","AdminContext","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","useStaffSubmit","_id","_Fragment","className","LabelArea","label","Uploader","folder","InputArea","type","placeholder","Error","errorName","email","phone","SelectRole","role","Button","Label","SettingServices","addGlobalSetting","getGlobalSetting","updateGlobalSetting","removeMultiDeleteMedia","defaultValue","required","min","max","disabled","Input","AdminServices","registerAdmin","loginAdmin","forgetPassword","resetPassword","signUpWithProvider","addStaff","getAllStaff","getStaffById","updateStaff","updateStaffStatus","deleteStaff","ItemTypes","Card","image","index","moveCard","handleRemoveImage","ref","useRef","handlerId","drop","useDrop","accept","collect","monitor","getHandlerId","hover","item","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drag","useDrag","isDragging","src","preview","alt","onClick","FiXCircle","Container","useCallback","prevCards","update","$splice","renderCard","card","i","text","map","cloudinary","config","cloud_name","process","REACT_APP_CLOUD_NAME","api_key","REACT_APP_CLOUDINARY_API_KEY","api_secret","REACT_APP_CLOUDINARY_API_SECRET","product","method","files","setFiles","selectedImages","setSelectedImages","productsDetails","setProductsDetails","globalSetting","fetchData","getRootProps","getInputProps","fileRejections","useDropzone","multiple","maxSize","maxFiles","number_of_image_per_product","onDrop","acceptedFiles","file","assign","URL","createObjectURL","element","imgUrl","thumbs","forEach","revokeObjectURL","_productsDetails$imag","images","findIndex","x","img","updatedImageUrl","splice","FormData","append","notifyError","status_code","result","FiUploadCloud","DndProvider","backend","HTML5Backend","setRole","Select","onChange","e","target","value","hidden","isDrawerOpen","closeDrawer","lang","selectedDate","setSelectedDate","dayjs","Date","format","language","setLanguage","resData","setResData","isSubmitting","setIsSubmitting","location","useLocation","setValue","clearErrors","formState","useForm","getStaffData","joiningData","_err$response2","_err$response2$data","response","pathname","Cookies","staffData","password","joiningDate","notifySuccess","_err$response","_err$response$data","handleSelectLanguage","instance","create","baseURL","timeout","headers","Accept","interceptors","request","use","company","JSON","parse","authorization","window","href","Promise","reject","responseBody","url","then"],"mappings":"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","file":"static/js/32.47af9fc5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// import Cookies from 'js-cookie';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\n\r\nconst useAsync = (asyncFunction) => {\r\n  const [data, setData] = useState([] || {});\r\n  const [error, setError] = useState(\"\");\r\n  // const [errCode, setErrCode] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const {\r\n    isUpdate,\r\n    setIsUpdate,\r\n    currentPage,\r\n    category,\r\n    searchText,\r\n    invoice,\r\n    status,\r\n    zone,\r\n    time,\r\n    sortedField,\r\n    source,\r\n    limitData,\r\n    startDate,\r\n    endDate,\r\n  } = useContext(SidebarContext);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    let source = axios.CancelToken.source();\r\n    (async () => {\r\n      try {\r\n        const res = await asyncFunction({ cancelToken: source.token });\r\n        if (!unmounted) {\r\n          setData(res);\r\n          setError(\"\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        if (!unmounted) {\r\n          setError(err.message);\r\n          if (axios.isCancel(err)) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n            setData([]);\r\n          } else {\r\n            setError(err.message);\r\n            setLoading(false);\r\n            setData([]);\r\n          }\r\n        }\r\n      }\r\n    })();\r\n\r\n  \r\n\r\n    setIsUpdate(false);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n      source.cancel(\"Cancelled in cleanup\");\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    isUpdate,\r\n    currentPage,\r\n    category,\r\n    searchText,\r\n    invoice,\r\n    status,\r\n    zone,\r\n    time,\r\n    sortedField,\r\n    source,\r\n    limitData,\r\n    startDate,\r\n    endDate,\r\n  ]);\r\n\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useAsync;\r\n","import requests from \"./httpService\";\r\n\r\nconst ProductServices = {\r\n  getAllProducts: async ({ page, limit, category, title, price }) => {\r\nlet obj = {};\r\nlet quantity;\r\n\r\nif (price === \"low\" || price === \"high\") {\r\n  obj.sort = { price: price === \"low\" ? \"asc\" : \"desc\" };\r\n} else if (price === \"date-added-asc\" || price === \"date-added-desc\") {\r\n  obj.sort = { created_at: price === \"date-added-asc\" ? \"asc\" : \"desc\" };\r\n} else {\r\n  obj = {};\r\n  quantity =price ? price === \"status-selling\" ? \"1\" : \"-1\" :'';\r\n}\r\n\r\nconst searchCategory = category !== null ? category : \"\";\r\nconst searchTitle = title !== null ? title : \"\";\r\nconst body = {\r\n  category: searchCategory,\r\n  title: searchTitle,\r\n  ...(Object.keys(obj).length !== 0 && { sort: obj.sort }),\r\n  ...(quantity && { quantity })\r\n};\r\n\r\nconsole.log(body);\r\n\r\n    return requests.post(\r\n      `/product/list?page=${page}&pageSize=${limit}`,body\r\n    );\r\n  },\r\n\r\n  getProductById: async (id) => {\r\n    return requests.get(`/product/${id}/data`);\r\n  },\r\n  addProduct: async (body) => {\r\n    return requests.post(\"/product/save\", body);\r\n  },\r\n  addAllProducts: async (body) => {\r\n    return requests.post(\"/products/all\", body);\r\n  },\r\n  updateProduct: async (id, body) => {\r\n    return requests.post(\"/product/save\", body);\r\n  },\r\n  updateManyProducts: async (body) => {\r\n    return requests.patch(\"products/update/many\", body);\r\n  },\r\n  updateStatus: async (id, body) => {\r\n    return requests.put(`/products/status/${id}`, body);\r\n  },\r\n\r\n  deleteProduct: async (id,body) => {\r\n    return requests.delete(`/product/${id}/delete`, body);\r\n  },\r\n  deleteManyProducts: async (body) => {\r\n    return requests.post(\"/product/multiple-delete\", body);\r\n  },\r\n};\r\n\r\nexport default ProductServices;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageTitle = ({ title, description }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>\r\n        {\" \"}\r\n        {title\r\n          ? ` ${title} | ecommerce : Point of Sale and E-Commerce Website all in one`\r\n          : \"ecommerce : Point of Sale and E-Commerce Website all in one\"}\r\n      </title>\r\n      <meta\r\n        name=\"description\"\r\n        content={\r\n          description\r\n            ? ` ${description} `\r\n            : \"ecommerce : Point of Sale and E-Commerce Website all in one\"\r\n        }\r\n      />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useContext } from \"react\";\r\nimport { Button } from \"@windmill/react-ui\";\r\nimport { AdminContext } from \"context/AdminContext\";\r\nimport useStaffSubmit from \"hooks/useStaffSubmit\";\r\nimport PageTitle from \"components/common/PageTitle\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport Uploader from \"components/image-uploader/Uploader\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport Error from \"components/form/Error\";\r\nimport SelectRole from \"components/form/SelectRole\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditProfile = () => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    state: { adminInfo },\r\n  } = useContext(AdminContext);\r\n\r\n  const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\r\n    useStaffSubmit(adminInfo._id);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle> {t(\"EditProfile\")} </PageTitle>\r\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfilePicture\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <Uploader\r\n                  imageUrl={imageUrl}\r\n                  setImageUrl={setImageUrl}\r\n                  folder=\"customer\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileName\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your Name\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileEmail\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileContactNumber\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Contact Number\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                />\r\n                <Error errorName={errors.phone} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label={t(\"ProfileYourRole\")} />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\r\n            <Button type=\"submit\" className=\"h-12 px-6\">\r\n              {t(\"updateProfile\")}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import requests from \"./httpService\";\r\n\r\nconst SettingServices = {\r\n  // global setting all function\r\n  addGlobalSetting: async (body) => {\r\n    // return requests.post(\"/setting/global/add\", body);\r\n  },\r\n\r\n  getGlobalSetting: async () => {\r\n    // return requests.get(\"/setting/global/all\");\r\n  },\r\n\r\n  updateGlobalSetting: async (body) => {\r\n    // return requests.put(`/setting/global/update`, body);\r\n  },\r\n    // multidelete Media\r\n  removeMultiDeleteMedia: async (body) => {\r\n    // return requests.post(\"/image/multiple-delete\", body);\r\n  },\r\n};\r\n\r\nexport default SettingServices;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  min,\r\n  max,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        min={min}\r\n        max={max}\r\n        disabled={disabled}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import requests from \"./httpService\";\r\n\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  loginAdmin: async (body) => {\r\n    return requests.post(`/admin/login`, body);\r\n  },\r\n\r\n  forgetPassword: async (body) => {\r\n    return requests.post(\"/forget-password\", body);\r\n  },\r\n\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n\r\n  signUpWithProvider: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminServices;\r\n","export const ItemTypes = {\r\n  CARD: 'card',\r\n};\r\n","import { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { ItemTypes } from \"./ItemTypes.js\";\r\n\r\nconst Card = ({ id, image, index, moveCard, handleRemoveImage }) => {\r\n  const ref = useRef(null);\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      // Time to actually perform the action\r\n      moveCard(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n  const [{}, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  drag(drop(ref));\r\n  return (\r\n    <div ref={ref} data-handler-id={handlerId}>\r\n      <div className=\"relative\">\r\n        <img\r\n          className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2 m-2\"\r\n          src={image?.preview || image}\r\n          alt=\"product\"\r\n        />\r\n        {index === 0 && (\r\n          <p className=\"text-xs absolute py-1 w-full bottom-0 inset-x-0 bg-blue-500 rounded-full text-white text-center \">\r\n            Default Image\r\n          </p>\r\n        )}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"absolute top-0 right-0 text-red-500 focus:outline-none\"\r\n          onClick={() => handleRemoveImage(image)}\r\n        >\r\n          <FiXCircle />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import update from \"immutability-helper\";\r\nimport { useCallback } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Container = ({ setImageUrl, imageUrl, handleRemoveImage }) => {\r\n  const moveCard = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      setImageUrl((prevCards) =>\r\n        update(prevCards, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, prevCards[dragIndex]],\r\n          ],\r\n        })\r\n      );\r\n    },\r\n    [setImageUrl]\r\n  );\r\n\r\n  const renderCard = useCallback(\r\n    (card, i) => {\r\n      return (\r\n        <Card\r\n          key={i + 1}\r\n          index={i}\r\n          id={card?.id}\r\n          text={card?.text}\r\n          moveCard={moveCard}\r\n          image={card}\r\n          handleRemoveImage={handleRemoveImage}\r\n        />\r\n      );\r\n    },\r\n    [moveCard, handleRemoveImage]\r\n  );\r\n  return <>{imageUrl && imageUrl?.map((card, i) => renderCard(card, i))}</>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { t } from \"i18next\";\r\nimport axios from \"axios\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport cloudinary from \"cloudinary/lib/cloudinary\";\r\nimport { FiUploadCloud, FiXCircle } from \"react-icons/fi\";\r\n\r\n//internal import\r\nimport useAsync from \"hooks/useAsync\";\r\nimport SettingServices from \"services/SettingServices\";\r\nimport { notifyError, notifySuccess } from \"../../utils/toast\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Container from \"./Container\";\r\nimport ProductServices from \"services/ProductServices\";\r\n\r\ncloudinary.config({\r\n  cloud_name: process.env.REACT_APP_CLOUD_NAME,\r\n  api_key: process.env.REACT_APP_CLOUDINARY_API_KEY,\r\n  api_secret: process.env.REACT_APP_CLOUDINARY_API_SECRET,\r\n});\r\n\r\nconst Uploader = ({ setImageUrl, imageUrl, product, folder, method,id, category }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setError] = useState(\"\");\r\n  const [selectedImages, setSelectedImages] = useState([])\r\n  const [productsDetails, setProductsDetails] = useState()\r\n\r\n  const { data: globalSetting } = useAsync(SettingServices.getGlobalSetting);\r\n  // console.log(\"data\", data);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (id) {\r\n          const res = await ProductServices.getProductById(id);\r\n          setProductsDetails(res.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching product details:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n  const { getRootProps, getInputProps, fileRejections } = useDropzone({\r\n    accept: \"image/*\",\r\n    multiple: product === true ? true : false,\r\n    maxSize: 500000,\r\n    maxFiles: product === true ? (globalSetting?.number_of_image_per_product || 10) : 1,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n          acceptedFiles.map((file) =>\r\n              Object.assign(file, {\r\n                preview: URL.createObjectURL(file),\r\n              })\r\n          )\r\n      );\r\n    },\r\n  });\r\n\r\n  useEffect(()=>{\r\n    if(product === true) {\r\n      files.map((element, index) => (\r\n          setImageUrl((imgUrl) => [...imgUrl, element])\r\n      ));\r\n    } else {\r\n      if (files.length > 0) {\r\n        setImageUrl(files);\r\n      }\r\n    }\r\n  },[files])\r\n\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img\r\n          className=\"inline-flex border-2 border-gray-100 w-24 max-h-24\"\r\n          src={file.preview}\r\n          alt={file.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleRemoveImage = async (img) => {\r\n    if(id){\r\n      let index = productsDetails?.images?.findIndex((x)=>x.name === img)\r\n      console.log(index)\r\n      if(index != -1){\r\n        const updatedImageUrl = [...imageUrl];\r\n        updatedImageUrl.splice(index, 1);\r\n        setImageUrl(updatedImageUrl)\r\n        let data = new FormData();\r\n        data.append('category_images', '');  // Add the appropriate value for 'category_images'\r\n        data.append('product_images', `${productsDetails?.images[index].id}`); \r\n        const res = await SettingServices.removeMultiDeleteMedia(data);\r\n        // setProductsDetails(res.data);\r\n        notifyError(\r\n              res.status_code === 200 ? \"Image delete successfully!\" : res.result\r\n            );\r\n\r\n      }\r\n    }else{\r\n      let index = imageUrl.findIndex((x)=> x === img)\r\n      console.log(index)\r\n      if(index != -1){\r\n        const updatedImageUrl = [...imageUrl];\r\n        updatedImageUrl.splice(index, 1);\r\n        setImageUrl(updatedImageUrl)\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full text-center\">\r\n      <div\r\n        className=\"border-2 border-gray-300 dark:border-gray-600 border-dashed rounded-md cursor-pointer px-6 pt-5 pb-6\"\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <span className=\"mx-auto flex justify-center\">\r\n          <FiUploadCloud className=\"text-3xl text-green-500\" />\r\n        </span>\r\n        <p className=\"text-sm mt-2\">{t(\"DragYourImage\")}</p>\r\n        <em className=\"text-xs text-gray-400\">{t(\"imageFormat\")}</em>\r\n      </div>\r\n\r\n      <div className=\"text-green-500\">{loading && err}</div>\r\n     \r\n      <aside className=\"flex flex-row flex-wrap mt-4\">\r\n        {product || category ? (\r\n          <DndProvider backend={HTML5Backend}>\r\n            <Container\r\n              setImageUrl={setImageUrl}\r\n              imageUrl={imageUrl}\r\n              handleRemoveImage={handleRemoveImage}\r\n            />\r\n          </DndProvider>\r\n        ) : !product || !category && imageUrl ? (\r\n          <div className=\"relative\">\r\n            {\" \"}\r\n            <img\r\n              className=\"inline-flex border rounded-md border-gray-100 dark:border-gray-600 w-24 max-h-24 p-2\"\r\n              src={imageUrl}\r\n              alt=\"product\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"absolute top-0 right-0 text-red-500 focus:outline-none\"\r\n              onClick={() => handleRemoveImage(imageUrl)}\r\n            >\r\n              <FiXCircle />\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          thumbs\r\n        )}\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"Admin\">Admin</option>\r\n        <option value=\"CEO\">CEO</option>\r\n        <option value=\"Manager\">Manager</option>\r\n        <option value=\"Accountant\">Accountant</option>\r\n        <option value=\"Driver\"> Driver </option>\r\n        <option value=\"Security Guard\">Security Guard</option>\r\n        <option value=\"Deliver Person\">Delivery Person</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import dayjs from \"dayjs\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport { AdminContext } from \"context/AdminContext\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\nimport AdminServices from \"services/AdminServices\";\r\nimport { notifyError, notifySuccess } from \"utils/toast\";\r\n\r\nconst useStaffSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate, lang } =\r\n    useContext(SidebarContext);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    dayjs(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [language, setLanguage] = useState(lang);\r\n  const [resData, setResData] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsSubmitting(true);\r\n\r\n      const staffData = {\r\n        name: {\r\n          [language]: data.name,\r\n        },\r\n        email: data.email,\r\n        password: data.password,\r\n        phone: data.phone,\r\n        role: data.role,\r\n        joiningDate: selectedDate\r\n          ? selectedDate\r\n          : dayjs(new Date()).format(\"YYYY-MM-DD\"),\r\n        image: imageUrl,\r\n        lang: language,\r\n      };\r\n\r\n      if (id) {\r\n        // console.log('id is ',id)\r\n        const res = await AdminServices.updateStaff(id, staffData);\r\n        setIsUpdate(true);\r\n        setIsSubmitting(false);\r\n        notifySuccess(res.message);\r\n        closeDrawer();\r\n      } else {\r\n        const res = await AdminServices.addStaff({ staffData });\r\n        setIsUpdate(true);\r\n        setIsSubmitting(false);\r\n        notifySuccess(res.message);\r\n        closeDrawer();\r\n      }\r\n    } catch (err) {\r\n      notifyError(err ? err?.response?.data?.message : err?.message);\r\n      setIsSubmitting(false);\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  const getStaffData = async () => {\r\n    try {\r\n      const res = await AdminServices.getStaffById(id, {\r\n        email: adminInfo.email,\r\n      });\r\n      if (res) {\r\n        setResData(res);\r\n        setValue(\"name\", res.name[language ? language : \"en\"]);\r\n        setValue(\"email\", res.email);\r\n        setValue(\"password\");\r\n        setValue(\"phone\", res.phone);\r\n        setValue(\"role\", res.role);\r\n        setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\r\n        setImageUrl(res.image);\r\n      }\r\n    } catch (err) {\r\n      notifyError(err ? err?.response?.data?.message : err?.message);\r\n    }\r\n  };\r\n\r\n  const handleSelectLanguage = (lang) => {\r\n    setLanguage(lang);\r\n\r\n    if (Object.keys(resData).length > 0) {\r\n      setValue(\"name\", resData.name[lang ? lang : \"en\"]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setResData({});\r\n      setValue(\"name\");\r\n      setValue(\"email\");\r\n      setValue(\"password\");\r\n      setValue(\"phone\");\r\n      setValue(\"role\");\r\n      setValue(\"joiningDate\");\r\n      setImageUrl(\"\");\r\n      clearErrors(\"name\");\r\n      clearErrors(\"email\");\r\n      clearErrors(\"password\");\r\n      clearErrors(\"phone\");\r\n      clearErrors(\"role\");\r\n      clearErrors(\"joiningDate\");\r\n      setImageUrl(\"\");\r\n      setLanguage(lang);\r\n      setValue(\"language\", language);\r\n      return;\r\n    }\r\n    if (id) {\r\n      getStaffData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\")) {\r\n      getStaffData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname, setValue]);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    language,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    isSubmitting,\r\n    handleSelectLanguage,\r\n  };\r\n};\r\n\r\nexport default useStaffSubmit;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL:`https://backend.kingsmankids.com/api`, //`https://backend.canadasentinel.ca/api`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle unauthorized (401) status code\r\n    if (error.response && error.response.status === 401) {\r\n      // Redirect to the login screen or perform any other action\r\n      // You may use a router or other method to redirect\r\n      console.log('Unauthorized access. Redirecting to login screen.');\r\n      // Replace the following line with your actual redirect code\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n"],"sourceRoot":""}